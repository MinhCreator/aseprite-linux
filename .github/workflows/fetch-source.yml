name: fetch source

on: 
    schedule:
    - cron:  '00 5 * * 1,3,5'
    workflow_dispatch:
       inputs:
        name:
            description: 'Run?'
            required: true
            default: 'YES!'
        
       
permissions:                # Job-level permissions configuration starts here
        contents: write           # 'write' access to repository contents
        pull-requests: write
jobs:
    fetch-source:
       runs-on: ubuntu-latest
       steps:
      
        - uses: actions/checkout@v4
        
        - name: Fetch release version
          run: |
            curl -s https://api.github.com/repos/MinhCreator/aseprite-linux/releases/latest --header     'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | jq -r ".tag_name"  > aseprite-versions/version.json
            curl -s https://api.github.com/repos/aseprite/aseprite/releases/latest --header 'authorization:   Bearer ${{ secrets.GITHUB_TOKEN }}' | jq -r ".tag_name" > aseprite-versions/version-check.json
        
        - name: Check for new version
          id: git-check
          run: echo "modified=$(if diff aseprite-versions/version.json aseprite-versions/version-check.json -q;     then echo "false"; fi)"  >> "$GITHUB_OUTPUT"
        
        - name: Import GPG
          if: steps.git-check.outputs.modified != 'false'
          uses: crazy-max/ghaction-import-gpg@v6
          with:
            git_user_signingkey: true
            git_commit_gpgsign: true
            git_tag_gpgsign: true
            git_committer_name: ${{ secrets.NAME }}
            git_committer_email: ${{ secrets.EMAIL }}
            gpg_private_key: ${{ secrets.WORK1 }}
          env:
            GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        
        - name: Git commit
          if: steps.git-check.outputs.modified != 'false'
          run: |
            curl -sL https://api.github.com/repos/aseprite/aseprite/releases/latest --header 'authorization:  Bearer ${{ secrets.GITHUB_TOKEN }}' | jq -r ".tag_name" > aseprite-versions/version.json
            rm -rf aseprite-versions/version-check.json
            git config --global commit.gpgsign true
            git config --global user.email "${{ secrets.EMAIL }}"
            git config --global user.name "${{ secrets.NAME }}"
            git add .
            git commit -S -m "new version released"
            git push
        
        - name: Repository Dispatch
          if: steps.git-check.outputs.modified != 'false'
          uses: peter-evans/repository-dispatch@v3
          with:
            token: ${{ secrets.PAT }}
            event-type: new-release